var vows = require('vows'),
    assert = require('assert'),
    cradle = require('cradle'),
    AddOrdersToDatabase = require('./../adapter'),
    fs = require('fs');

var eBayAPI = {
    makeRequest: function(request_name, callback, params, format) {
        callback(this.err.shift(), this.response.shift());
    },
    response: [],
    err: []
}

var db = new(cradle.Connection)('https://casamiento.iriscouch.com', 443, {
    cache: true,
    auth: {
        username: "casamiento",
        password: "floppsy1"
    }
}).database("test_ebay");

function resetDb(time, callback) {
    db.destroy(function(err, res) {
        if (err) {
            throw ("Could not destroy database" + err);
        }
        else {
            console.log("Destroyed database");
            db.create(function(err, res) {
                console.log("Created database: ", err, res);
                if (err) {
                    console.log("MAJOR ERROR!!!!", err)
                }
                else {
                    db.save("time", {
                        lastModified: time
                    }, function(err, res) {
                        if (err) {
                            console.log("TIME EERROR", err)
                        }
                        else {
                            db.save('_design/customers', {
                                eias_token: {
                                    map: function(doc) {
                                        if (doc.EIASToken) {
                                            emit(doc.EIASToken, doc);
                                        }
                                    }
                                }
                            }, function(err, res) {
                                callback(res);
                            });

                    }
                    });
            }
            })
    }
    })
}

function fakeResponse(name, cb) {
    fs.readFile(__dirname + '/fixtures/' + name + '.json', 'utf-8', function(err, res) {
        eBayAPI.response.push(JSON.parse(res));
        cb();
    });
}
vows.describe('Import eBay orders').addBatch({
    "When importing a single order with a single transaction": {
        topic: function() {
            var self = this;
            fakeResponse("order_a", function() {
                AddOrdersToDatabase(db, eBayAPI, self.callback);
            })
        },
        "after polling the database": {
            topic: function(topic) {
                db.all(this.callback);
            },
            "the order should be successfully added": function(topic) {
                assert.equal(2, topic.length, "Should be 2" + topic);
            }
        }
    },
    teardown: function(topic) {
        resetDb("2001-01-01T00:00:50.000Z", this.callback);
    }
}).run();