var parseEbayResponse = {
    parse: function(response, ebayAPI, callback) {
        this.api = ebayAPI;
        this.response = response;
        this.totalOrders = parseInt(this.response.PaginationResult.TotalNumberOfEntries);
        this.TimeStamp = this.response.TimeStamp;
        this._processOrders();
        this.response.orders = this.response.OrderArray.Order;
        this._getItemSKUs(callback);
    },

    _getItemSKUs: function(callback) {
        
        var self = this,
            counter = this.transactions_requiring_SKU.length;
            
            console.log("Counter:",this.transactions_requiring_SKU.length);
        if (!counter) {
            callback(self.response)
        }
        else {
            
            self.transactions_requiring_SKU.forEach(function(transaction) {

                self.api.makeRequest("GetItem", function(xml) {
                    transaction.Variation.SKU = xml;
                    counter--
                    if (!counter) callback(self.response);
                }, {
                    ItemID: transaction.Item.ItemID
                }, "json");

            });
        }
    },
    
    _processOrders: function() {
        var self = this;
        this.transactions_requiring_SKU = [];
        this.response.ordersByID = {};        
        this.response.orderLineItemIDs = [];
        
        // Normalize orders, so even single orders are in an array
        this.response.OrderArray.Order = this.response.OrderArray.Order.length ? this.response.OrderArray.Order : [ this.response.OrderArray.Order ]
      
        var orders = this.response.OrderArray.Order;

        orders.forEach(function(order) {
            var transactions = order.TransactionArray.Transaction;
            order._id = order.OrderID;
            self.response.ordersByID[order._id] = order;

            // Normalize transactions, so even single transactions are in an array
            transactions = transactions.length ? transactions : [ transactions ];

            transactions.forEach(function(transaction) {
                if (!(order._id.match(/-/))) {
                    self.response.orderLineItemIDs.push(transaction.OrderLineItemID);
                }
                if (transaction.Variation && !transaction.Variation.SKU) {
                    self.transactions_requiring_SKU.push(transaction);
                }
            });

        });
    }

};

module.exports = parseEbayResponse;