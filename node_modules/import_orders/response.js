var _ = require('underscore'),
    eBayTradingAPI = require('ebay_trading_api');

// eBay Credentials 
var appId = 'Casmient-2aff-4dab-9163-50f440216b96',
    devId = 'c8d4d396-f869-44d9-8798-df4c2de90717',
    certId = '454dd9f0-47d0-4871-ab91-ab0038a59cd3',
    authToken = 'AgAAAA**AQAAAA**aAAAAA**kRoiTg**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6wFk4CoAZeCpQ6dj6x9nY+seQ**JpMBAA**AAMAAA**oZA6Ywa6Ma6zNlkw3cqilP+685HQPlP4Bf1XAf+2Rt9V77dU94zFnoj4nhflnUipahn1Fy2roxApfA5ELDRgedWuspTUBirBQ5bAsuq9Btysg3p4KCq5+vsLLi3gyElWAOOOEvjTe24GHXDyHxrJsci0Ht3gMvOQ0rllbdiplsymNRY0+lXrS4jGrLRV3VCwbA2rAuhDhEaJbBH0GNP+YRO2GEerOQUGmA1/zeGYOfa/ZyU/7vQYZoBFG+v+31rxfqlOVo53o9lOo2QVfI1TDRtlsQBaBe159Shbe686AdRod5zAlimUtpzV9/9OqeMDGHqjWi39CsCjTDctOsLm3Ck/h8nJcOkOHCa2aDvW1ney+77L8HljBIBCNBkNookq13s51zRjQh+vekwBi2ja0hZgIlKULFp3QZdF8np9qlhPjWT90udSQiy2hczfFQmK/vCW2dY8OD+6bcPLQa/ruTVMMLQKga3Hdi4oFxJlhLcH3hpi4Z4vunOYnxGhtva2iQpLUfRBwHpCNr2swDQDT8Y4BLkn0GpNAqaOBX700f+uywf0BnOwYwdyL7+kx/8TMR0lwTJvmlPguukEY/zMtrTIChiX6sDAAXTep9H5plEvUKmBwwqxo+Jy15kIkkmMQh5eq58I+/Zw+PWF7sNn7rWLTQyqexrPImWG3hqQlNF2O4F29DWQCfKtiD+Y+RzOF3vngtgeQmCbdWKnP9OXaxIitTuRsDagj5ebjU0DNWkX5/6eQlDScp3fVMNi0pgf';

var api = new eBayTradingAPI(appId, '3', devId, certId, authToken);

/*
 * GET ORDERS RESPONSE
 */
var OrdersResponse = function(response, callback) {
        this.response = response;
        this.totalOrders = parseInt(this.response.PaginationResult.TotalNumberOfEntries);
        this.TimeStamp = this.response.TimeStamp;
        this._processOrders();
        this.allOrders = this.singleLineOrders.concat(this.multipleLineOrders);
        this._getItemSKUs(callback);
    }

OrdersResponse.prototype._getItemSKUs = function(callback) {
    var self = this;
    var counter = this.transactions.length;
    this.transactions.forEach(function(t) {
        if(t.Variation && !t.Variation.SKU) {
            api.makeRequest("GetItem", function(xml) {
                t.Variation.SKU = xml;
                counter--                
                if(!counter) callback(self);                
            }, { ItemID: t.Item.ItemID }, "json");
        }
        else {
            counter--;            
            if(!counter) callback(self); 
        }
    });
}

OrdersResponse.prototype._processOrders = function() {
    var self = this;
    this.multipleLineOrders = [];
    this.singleLineOrders = []
    this.orderLineItemIDs = []
    this.transactions = []
    this.ordersByID = {}
    
    // Normalize orders, so even single orders are in an array
    var orders = this.response.OrderArray.Order.length ? this.response.OrderArray.Order : [this.response.OrderArray.Order];

    orders.forEach(function(o) {
        o._id = o.OrderID;
        self.ordersByID[o._id] = o;
        // Normalize transactions
        o.TransactionArray.Transaction = o.TransactionArray.Transaction.length ? o.TransactionArray.Transaction : [o.TransactionArray.Transaction]
        if (o.OrderID.match(/-/)) {
            self.singleLineOrders.push(o);
            o.TransactionArray.Transaction.forEach(function(t) {
                self.transactions.push(t);
            });
        }
        else {
            self.multipleLineOrders.push(o);
            o.TransactionArray.Transaction.forEach(function(t) {
                self.orderLineItemIDs.push(t.OrderLineItemID);
                self.transactions.push(t);
            });
        }
    });
};

module.exports = OrdersResponse;