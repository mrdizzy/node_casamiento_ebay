var http = require('https'),
    xml = require('xmlbuilder');
    
var eBayTradingAPI = function(appId, siteId, devId, certId, authToken) {
    this.options = {
        host: "api.sandbox.ebay.com",
        method: "POST",
        path: "/ws/api.dll",
        headers: {
            "X-EBAY-API-APP-NAME": appId,
            "X-EBAY-API-DEV-NAME": devId,
            "X-EBAY-API-CERT-NAME": certId,
            "X-EBAY-API-COMPATIBILITY-LEVEL": "765",
            "X-EBAY-API-SITEID": siteId,
            "X-EBAY-API-REQUEST-ENCODING": "XML"
        }
    };
    this.authToken = authToken;
}
eBayTradingAPI.prototype.makeRequest = function(name, callback, fields) {
    this.options.headers["X-EBAY-API-CALL-NAME"] = name;

    var doc = xml.create();
    var base = doc.begin(name + 'Request', {
        'version': '1.0',
        'encoding': 'utf-8'
    }).att('xmlns', 'urn:ebay:apis:eBLBaseComponents').ele("RequesterCredentials").ele("eBayAuthToken").txt(this.authToken).up().up();

    for (var property in fields) {
        base.ele(property).txt(fields[property]);
    }
    
    var xmlBody = doc.toString();

   var req = http.request(this.options, function(response) {
        var result = "";
        response.on('data', function(chunk) {

            result += chunk;
        });
        response.on('end', function() {
            callback(result);
       });
       response.on('error', function(err) {
           console.log(err);
       });
    });
    
   req.write(xmlBody);
   req.end();
};

module.exports = eBayTradingAPI;