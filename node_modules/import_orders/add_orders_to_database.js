var parseEbayResponse = require('./parse_ebay_response'),
    winston = require('winston');

winston.add(winston.transports.File, {
    filename: 'import_orders.log'
});

function AddOrdersToDatabase(db, jsonData, ebayAPI, callback) {
    winston.log("Adding orders to database");
    parseEbayResponse.parse(jsonData, ebayAPI, function(response) {

        db.save(response.orders, function(err, res) {
            if (err) {
                winston.log("Unable to save raw orders. Error: " + err.error + " Reason: " + err.reason);
            }
            else {
                saveOrdersSeparately(res)
            }
        })

        function saveOrdersSeparately(documents) {
            var waiting = documents.length;
            documents.forEach(function(doc) {
                if (doc.error == 'conflict') {

                    db.save(doc.id, response.ordersByID[doc.id], function(error, response) {
                        if (error) {
                            winston.log("Saving seperately error", error, doc);
                        }
                        else {
                            waiting--;
                            if (!waiting) {
                                updateTime();
                            }
                        }
                    });
                }
                else {
                    waiting--;
                    if (!waiting) {
                        updateTime();
                    }
                }
            })
        }

        function updateTime() {
            db.merge('time', {
                lastUpdated: response.TimeStamp
            }, function(err, res) {
                if (err) {
                    winston.log("Unable to update time:" + err.reason);
                }
                else {
                    combineOrders()
                }
            });
        }

        function combineOrders() {
            winston.log("Combining" + response.orderLineItemIDs);
            waiting = response.orderLineItemIDs.length;
            if (response.orderLineItemIDs.length > 0) {
                winston.log("Combining orders" + response.orderLineItemIDs);
                db.get(response.orderLineItemIDs, function(err, res) {
                    res.forEach(function(order) {
                        if (order.error) {
                            waiting--;
                            if (!waiting) {
                                callback(null, true);
                            }
                        }
                        else {
                            winston.log("Removing order");
                            db.remove(order._id, order._rev, function(e, r) {
                                waiting--;
                                if (!waiting) {
                                    callback(null, true);
                                }
                            })
                        }
                    });
                });
            }
            else {
                callback(null, true)
            }
        }
    })
}
module.exports = AddOrdersToDatabase;